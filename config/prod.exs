use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.
config :elixir_status, ElixirStatus.Endpoint,
  http: [port: {:system, "PORT"}],
  url: [scheme: "https", host: "status.yakshav.es", port: 443],
  cache_static_manifest: "priv/static/manifest.json",
  secret_key_base: System.get_env("SECRET_KEY_BASE"),
  force_ssl: [rewrite_on: [:x_forwarded_proto]]

config :elixir_status, ElixirStatus.Repo,
  adapter: Ecto.Adapters.Postgres,
  url: System.get_env("DATABASE_URL"),
  pool_size: String.to_integer(System.get_env("POOL_SIZE") || "10"),
  ssl: true

config :ex_twitter, :oauth, [
   consumer_key: System.get_env("TWITTER_CONSUMER_KEY"),
   consumer_secret: System.get_env("TWITTER_CONSUMER_SECRET"),
   access_token: System.get_env("TWITTER_ACCESS_TOKEN"),
   access_token_secret: System.get_env("TWITTER_ACCESS_SECRET")
]

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section:
#
#  config :elixir_status, ElixirStatus.Endpoint,
#    ...
#    https: [port: 443,
#            keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#            certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables point to a file on
# disk for the key and cert.

# Do not print debug messages in production
config :logger, :console, level: :info

config :elixir_status, :base_url, "https://status.yakshav.es"

config :elixir_status, :twitter_screen_name, System.get_env("TWITTER_SCREEN_NAME")
config :elixir_status, :twitter_dm_recipient, System.get_env("TWITTER_DM_RECIPIENT")

if System.get_env("ALLOWED_USERS") do
  config :elixir_status, :allowed_users, String.split(System.get_env("ALLOWED_USERS"), ",")
else
  config :elixir_status, :allowed_users, nil
end

config :elixir_status, :admin_user_ids, [1]
config :elixir_status, :admin_overview_iframe_url, "http://twitter.com/"
config :elixir_status, :admin_site_switcher_html, ""

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :elixir_status, ElixirStatus.Endpoint, server: true
#

# Finally import the config/prod.secret.exs
# which should be versioned separately.
